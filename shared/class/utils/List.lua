---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 23/05/2022 11:34
---


QX.export("List",function(cls)
    ---@class QX.List : QX.Object
    local class = cls;

    function class:constructor(...)
        self.data = {};
        for k,v in ipairs({...}) do
            table.insert(self.data,v)
        end
        return self;
    end

    function class:foreach(cb)
        for k,v in ipairs(self.data) do
            cb(v)
        end
    end

    function class:add(value)
        table.insert(self.data,value);
    end

    function class:remove(value)
        local index = -1;
        for k,v in ipairs(self.data) do
            if v == value then
                index = k;
                break;
            end
        end
        if index ~= -1 then
            table.remove(self.data,index);
        end
    end

    function class:removeItemAtIndex(index)
        table.remove(self.data,index);
    end

    function class:contains(value)
        for k,v in ipairs(self.data) do
            if v == value then
                return true;
            end
        end
        return false;
    end
    ---@return QX.List
    function class:filter(predicate)
        local list = QX.List:new();
        for k,v in ipairs(self.data) do
            if predicate(v) then
                list:add(v);
            end
        end
        return list;
    end

    function class:removeIf(predicate)
        for k,v in ipairs(self.data) do
            if predicate(v) then
                table.remove(self.data,k);
            end
        end
    end

    function class:first(predicate)
        for k,v in ipairs(self.data) do
            if predicate(v) then
                return v;
            end
        end
    end

    function class:sort(comparer)
        table.sort(self.data,comparer);
    end

    function class:size()
        return #self.data;
    end

    function class:clear()
        self.data = {};
    end

    return class;
end)

