---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Absolute.
--- DateTime: 23/05/2022 11:56
---

QX.export("Map",function(cls)
    ---@class QX.Map : QX.Object
    local class = cls;

    function class:constructor()
        self.data = {};
    end

    function class:get(key)
        return self.data[key];
    end
    ---Set value for key
    ---@param key any
    ---@param value any
    function class:set(key, value)
        self.data[key] = value;
    end
    ---Remove value for key
    ---@param key any
    function class:remove(key)
        self.data[key] = nil;
    end

    function class:contains(key)
        return self.data[key] ~= nil;
    end

    function class:foreach(cb)
        for k,v in pairs(self.data) do
            cb(k,v);
        end
    end
    ---@return QX.Map
    function class:filter(predicate)
        local map = QX.import("Map"):new();
        for k,v in pairs(self.data) do
            if predicate(k,v) then
                map:set(k,v);
            end
        end
        return map;
    end

    function class:values(cb)
        for k,v in pairs(self.data) do
            cb(v);
        end
    end

    function class:keys(cb)
        for k,v in pairs(self.data) do
            cb(k);
        end
    end

    function class:removeIf(predicate)
        for k,v in pairs(self.data) do
            if predicate(k,v) then
                self.data[k] = nil;
            end
        end
    end

    ---Init data
    ---@param map table
    function class:setMap(map)
        self.data = map;
    end

    ---@param cb function
    function class:sizeOf()
        local count = 0;
        for k,v in pairs(self.data) do
            count = count + 1;
        end
        return count;
    end

    return class;
end)

